#include "user.h"
#define DATABASE_NAME "C:\\Users\\cosmi\\Desktop\\users.db"
struct pers
{
    QString text[7];
    QString n[25];
}decod;

User::User(QString name)
{
    level = 0;
    this->username = name;
    
    db = QSqlDatabase::addDatabase("QSQLITE");
    db.setDatabaseName(DATABASE_NAME);
    db.open();
    readFromDatabase(name);
    emit onLogin();
}
User::User(QString name, QString bosss){
    level = 0 ;
    this->setUserName(name);
    this->setBoss(bosss);
    QString tableName="PERSONAL";
    db = QSqlDatabase::addDatabase("QSQLITE");
    db.setDatabaseName(DATABASE_NAME);
    db.open();
    emit onLogin();
}
User::User(){
    level = 0;
    QString tableName="PERSONAL";
    db = QSqlDatabase::addDatabase("QSQLITE");
    db.setDatabaseName(DATABASE_NAME);
    db.open();
    emit onLogin();
}
User::User(QString name ,Firma* f1 ,QString boss){
    level = 0;
    this->username = name;
    firma = f1 ;
    this->boss = boss;

    db = QSqlDatabase::addDatabase("QSQLITE");
    db.setDatabaseName(DATABASE_NAME);
    db.open();
    emit onLogin();
}
void User::decode(QString c)
{
    for(int i=0;i<7;i++)
        decod.text[i]="";
    for(int i=0;i<25;i++)
        decod.n[i]="";
    int i=0,k=1,l=0;
    while(c[i]!=',')
    {
        decod.text[0]+=c[i];
        i++;
    }
    i++;
    int size=c.size();
    for(;i<size;i++)
    {
        if(c[i]=='\'' )
        {
            while(c[i]!=','&&i<size)
            {
                decod.text[k]+=c[i];
                i++;
            }
            k++;
        }
        else
        {
            while(c[i]!=','&&i<size)
            {
                decod.n[l]+=c[i];
                i++;
            }
            l++;
        }
    }
}
void User::readFromDatabase(QString name)
{
    int count = 0;

    QSqlQuery query2;
    QString sql2 = "SELECT * FROM PERSONAL;";
    query2.exec(sql2);
    while(query2.next())
            count++;

    int index,i,ok=0,l;
    QString tmp;
    for(int j=0;j<count;j++){
    index=j;

        QString tableName="PERSONAL";
        QSqlQuery query;
        QString sql = "SELECT * FROM " + tableName + " WHERE CRT = " + QVariant(index).toString() +" ;";
        query.exec(sql);


        //qDebug()<<sql;
        tmp ="";
        int i=1;
        int n = query.record().count();


            while(query.next() && i<n-1){
            for( i=1; i<n; i++){
                if(query.record().value(i).type() == query.record().value(1).type()){
                    if(i < n-1){
                        tmp = tmp + "'" + query.record().value(i).toString() +"',";
                    }
                    else{
                        tmp = tmp + "'" + query.record().value(i).toString() +"'";
                    }
                }
                else{
                    if(i < n-1){
                        tmp = tmp + query.record().value(i).toString() +",";
                    }
                    else{
                        tmp = tmp + query.record().value(i).toString();
                    }
                }
            }
        }


    QString connection;
    connection = db.connectionName();
    db.close();
    db = QSqlDatabase();
    db.removeDatabase(connection);

    decode(tmp);

    if(decod.text[1].size()==name.size())
    {
        for(l=0;l<name.size();l++)
            if(decod.text[1][l]!=name[l])
                break;
        if(l==name.size())
        {
            //intrare=decod;
            ok=1;
            break;
        }
    }
            cnp=decod.text[0];
            email=decod.text[2];
            numeFirma=decod.text[3];
            sef=decod.text[4];
            salariu=decod.text[5].toInt();
            adresa=decod.text[6];
            moneda=decod.n[1].toInt();//lei sau euro la salariu
            dep=decod.n[2].toInt();//0 1 2 3 4 respectiv rutier,depozitare,maritim,aerian,feroviar
            compAerian=decod.n[3].toInt();
            compMaritm=decod.n[4].toInt();
            compRutier=decod.n[5].toInt();
            compFeroviar=decod.n[6].toInt();
            compInternat=decod.n[7].toInt();
            compDomestic=decod.n[8].toInt();
            depozitare=decod.n[9].toInt();
            comercial=decod.n[10].toInt();
            achizitii=decod.n[11].toInt();
            manageEchipa=decod.n[12].toInt();
            analiza=decod.n[13].toInt();
            prezentare=decod.n[14].toInt();
            decizii=decod.n[15].toInt();
            comunicare=decod.n[16].toInt();
            manageProiect=decod.n[17].toInt();
            manageTimp=decod.n[18].toInt();
            leanManage=decod.n[19].toInt();
            sixSigma=decod.n[20].toInt();
            tADR=decod.n[21].toInt();
            tIATA=decod.n[22].toInt();
            sisInfo=decod.n[23].toInt();
            standardLucru=decod.n[24].toInt();


    }
    if(ok==0)
        qDebug()<<"Nu s-a gasit";

}

